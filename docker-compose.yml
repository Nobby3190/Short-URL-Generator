version: "3"
services:
  app:
    build: .
    ports:
      - 8000:8000
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 8090:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    restart: always
    networks:
      - app-network


  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: urls
      POSTGRES_USER: nobby
      POSTGRES_PASSWORD: nobby
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U nobby -d urls']
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      - app
    restart: always
    networks:
      - app-network


  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    command: redis-server --appendonly yes --requirepass '123456'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - app
    restart: always
    networks:
      - app-network

networks:
    app-network:
      driver: bridge
